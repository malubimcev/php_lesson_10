1. Наследование - возможность создавать новые классы на основе существующих. Это позволяет создавать объекты с похожими общими свойствами и поведением.
Наследование - основа для полиморфизма.
Полиморфизм - способность менять алгоритм выполнения методов родственных классов с одинаковым описанием (имя метода, набор аргументов).
Это позволяет одинаково работать в коде с объектами разных классов, но имеющих общего родителя, не вдаваясь в подробности их внутренней реализации.

2. Абстрактные классы описывают общую структуру класса, как набор открытых свойств и методов. Могут содержать реализацию некоторых из них.
Интерфейсы содержат только описание методов, которые должны быть переопределены в каждом классе.
Класс может имплементировать любое количество интерфейсов, но быть наследником только одного класса.
Думаю, абстрактные классы нужно использовать для создания общей структуры объектов в приложении, а интерфейсы - для более гибкого взаимодействия объектов между собой.
